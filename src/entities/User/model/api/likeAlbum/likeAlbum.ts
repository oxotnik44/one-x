import toast from 'react-hot-toast';
import { useUserStore } from 'entities/User/model/slice/useUserStore';
import type { User } from 'entities/User/model/types/user';
import { apiJson } from 'shared/api';

export const likeAlbum = async (albumId: string): Promise<void> => {
    const { authData, toggleLikeAlbum } = useUserStore.getState();

    if (!authData) {
        toast.error('–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –ª–∞–π–∫–∞—Ç—å');
        return;
    }
    // 1. –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ —Å—Ç–æ—Ä (–ª–∞–π–∫–∏ + —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏)
    toggleLikeAlbum(albumId);

    // 2. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const { authData: updatedUser } = useUserStore.getState();
    if (!updatedUser) return;

    const likedAlbums = updatedUser.likedAlbums ?? [];
    try {
        await apiJson.patch<Partial<User>>(`/users/${updatedUser.id}`, {
            likedAlbums,
            recommendation: updatedUser.recommendation,
        });

        toast.success(
            likedAlbums.includes(albumId) ? '‚ù§Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ' : 'üíî –£–±—Ä–∞–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
        );
    } catch {
        toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ª–∞–π–∫');
    }
};
