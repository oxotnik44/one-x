import toast from 'react-hot-toast';
import { useUserStore } from 'entities/User/model/slice/useUserStore';
import type { User } from 'entities/User/model/types/user';
import { apiJson } from 'shared/api';

export const likeAlbum = async (albumId: string): Promise<void> => {
    const { authData, toggleLikeAlbum } = useUserStore.getState();

    if (!authData) {
        toast.error('–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –ª–∞–π–∫–∞—Ç—å');
        return;
    }

    const likedAlbums = authData.likedAlbums ?? [];
    const updatedLikedAlbums = likedAlbums.includes(albumId)
        ? likedAlbums.filter((id) => id !== albumId)
        : [...likedAlbums, albumId];

    try {
        await apiJson.patch<Partial<User>>(`/users/${authData.id}`, {
            likedAlbums: updatedLikedAlbums,
        });
        toggleLikeAlbum(albumId);
        toast.success(
            likedAlbums.includes(albumId) ? 'üíî –£–±—Ä–∞–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' : '‚ù§Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
        );
    } catch {
        toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ª–∞–π–∫');
    }
};
