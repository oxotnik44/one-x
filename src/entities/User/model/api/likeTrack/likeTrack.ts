import toast from 'react-hot-toast';
import { useUserStore } from 'entities/User/model/slice/useUserStore';
import type { User } from 'entities/User/model/types/user';
import { apiJson } from 'shared/api';

export const likeTrack = async (trackId: string): Promise<void> => {
    const { authData, toggleLikeTrack } = useUserStore.getState();
    if (!authData) {
        toast.error('–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –ª–∞–π–∫–∞—Ç—å');
        return;
    }

    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ likedTracks (–ª–æ–∫–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å –≤ toggleLikeTrack)
        const updatedLikedTracks = authData.likedTracks?.includes(trackId)
            ? authData.likedTracks.filter((id) => id !== trackId)
            : [...(authData.likedTracks || []), trackId];

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        await apiJson.patch<Partial<User>>(`/users/${authData.id}`, {
            likedTracks: updatedLikedTracks,
            recommendation: authData.recommendation,
        });

        // –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–π—Ç
        toggleLikeTrack(trackId);

        toast.success(
            updatedLikedTracks.includes(trackId)
                ? '‚ù§Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'
                : 'üíî –£–±—Ä–∞–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
        );
    } catch (error) {
        toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ª–∞–π–∫');
        console.error(error);
    }
};
